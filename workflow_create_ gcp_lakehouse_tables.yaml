main:
  params: [input]
  steps:
    - init:
        assign:
          - results : {} # result from each branch iteration 
    - create_gcp_tbl_order_items:
            steps:
                - logTable_gcp_tbl_order_items:
                    call: sys.log
                    args:
                        text: ${"Creating gcp_tbl_order_items..."}
                - runQuery_gcp_tbl_order_items:
                        call: googleapis.bigquery.v2.jobs.query
                        args:
                            projectId: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
                            body:
                                useLegacySql: false
                                useQueryCache: false
                                location: 'us-central1'
                                timeoutMs: 600000
                                query: ${"CREATE OR REPLACE EXTERNAL TABLE `gcp_lakehouse_ds.gcp_tbl_order_items` WITH CONNECTION `us-central1.gcp_lakehouse_connection` OPTIONS(format ='Parquet', uris = ['gs://gcp-lakehouse-edw-export-" + sys.get_env("GOOGLE_CLOUD_PROJECT_ID") + "/thelook_ecommerce/order_items-*.Parquet'], max_staleness = INTERVAL 30 MINUTE, metadata_cache_mode = 'AUTOMATIC');"}
                        result: queryResult
                - returnResult_create_gcp_tbl_order_items:
                    assign:
                        - results.create_gcp_tbl_order_items: ${queryResult}
    - create_gcp_tblorders:
        steps:
            - logTable_create_gcp_tbl_orders:
                call: sys.log
                args:
                    text: ${"Creating gcp_tbl_orders..."}
            - runQuery_gcp_tbl_orders:
                call: googleapis.bigquery.v2.jobs.query
                args:
                    projectId: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
                    body:
                        useLegacySql: false
                        useQueryCache: false
                        location: 'us-central1'
                        timeoutMs: 600000
                        query: ${"CREATE OR REPLACE EXTERNAL TABLE `gcp_lakehouse_ds.gcp_tbl_orders` WITH CONNECTION `us-central1.gcp_lakehouse_connection` OPTIONS(format ='Parquet', uris = ['gs://gcp-lakehouse-edw-export-" + sys.get_env("GOOGLE_CLOUD_PROJECT_ID") + "/thelook_ecommerce/orders-*.Parquet'], max_staleness = INTERVAL 30 MINUTE, metadata_cache_mode = 'AUTOMATIC');"}
                result: queryResult
            - returnResult_create_gcp_tbl_orders:
                assign:
                    - results.create_gcp_tbl_orders: ${queryResult}
    - create_gcp_tbl_users:
        steps:
            - logTable_create_gcp_tbl_users:
                call: sys.log
                args:
                    text: ${"Creating gcp_tbl_users..."}
            - runQuery_create_gcp_tbl_users:
                call: googleapis.bigquery.v2.jobs.query
                args:
                    projectId: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
                    body:
                        useLegacySql: false
                        useQueryCache: false
                        location: 'us-central1'
                        timeoutMs: 600000
                        query: ${"CREATE OR REPLACE EXTERNAL TABLE `gcp_lakehouse_ds.gcp_tbl_users` WITH CONNECTION `us-central1.gcp_lakehouse_connection` OPTIONS(format ='Parquet', uris = ['gs://gcp-lakehouse-edw-export-" + sys.get_env("GOOGLE_CLOUD_PROJECT_ID") + "/thelook_ecommerce/users-*.Parquet'], max_staleness = INTERVAL 30 MINUTE, metadata_cache_mode = 'AUTOMATIC');"}
                result: queryResult
            - returnResult_create_gcp_tbl_users:
                assign:
                    - results.create_gcp_tbl_users: ${queryResult}
         
    - create_gcp_tbl_distribution_centers:
        steps:
            - logTable_create_gcp_tbl_distribution_centers:
                call: sys.log
                args:
                    text: ${"Creating gcp_tbl_distribution_centers..."}
            - runQuery_create_gcp_tbl_distribution_centers:
                call: googleapis.bigquery.v2.jobs.query
                args:
                    projectId: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
                    body:
                        useLegacySql: false
                        useQueryCache: false
                        location: 'us-central1'
                        timeoutMs: 600000
                        query: ${"CREATE OR REPLACE EXTERNAL TABLE `gcp_lakehouse_ds.gcp_tbl_distribution_centers` WITH CONNECTION `us-central1.gcp_lakehouse_connection` OPTIONS(format ='Parquet', uris = ['gs://gcp-lakehouse-edw-export-" + sys.get_env("GOOGLE_CLOUD_PROJECT_ID") + "/thelook_ecommerce/distribution_centers-*.Parquet'], max_staleness = INTERVAL 30 MINUTE, metadata_cache_mode = 'AUTOMATIC');"}
                result: queryResult
            - returnResult_create_gcp_tbl_distribution_centers:
               assign:
                    - results.create_gcp_tbl_distribution_centers: ${queryResult}
    - create_gcp_tbl_inventory_items:
        steps:
            - logTable_create_gcp_tbl_inventory_items:
                call: sys.log
                args:
                    text: ${"Creating gcp_tbl_inventory_items..."}
            - runQuery_create_gcp_tbl_inventory_items:
                call: googleapis.bigquery.v2.jobs.query
                args:
                    projectId: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
                    body:
                        useLegacySql: false
                        useQueryCache: false
                        location: 'us-central1'
                        timeoutMs: 600000
                        query: ${"CREATE OR REPLACE EXTERNAL TABLE `gcp_lakehouse_ds.gcp_tbl_inventory_items` WITH CONNECTION `us-central1.gcp_lakehouse_connection` OPTIONS(format ='Parquet', uris = ['gs://gcp-lakehouse-edw-export-" + sys.get_env("GOOGLE_CLOUD_PROJECT_ID") + "/thelook_ecommerce/inventory_items-*.Parquet'], max_staleness = INTERVAL 30 MINUTE, metadata_cache_mode = 'AUTOMATIC');"}
                result: queryResult
            - returnResult_create_gcp_tbl_inventory_items:
                assign:
                    - results.create_gcp_tbl_inventory_items: ${queryResult}
    - create_gcp_tbl_products:
        steps:
            - logTable_create_gcp_tbl_products:
                call: sys.log
                args:
                    text: ${"Creating gcp_tbl_products..."}
            - runQuery_create_gcp_tbl_products:
                call: googleapis.bigquery.v2.jobs.query
                args:
                    projectId: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
                    body:
                        useLegacySql: false
                        useQueryCache: false
                        location: 'us-central1'
                        timeoutMs: 600000
                        query: ${"CREATE OR REPLACE EXTERNAL TABLE `gcp_lakehouse_ds.gcp_tbl_products` WITH CONNECTION `us-central1.gcp_lakehouse_connection` OPTIONS(format ='Parquet', uris = ['gs://gcp-lakehouse-edw-export-" + sys.get_env("GOOGLE_CLOUD_PROJECT_ID") + "/thelook_ecommerce/products-*.Parquet'], max_staleness = INTERVAL 30 MINUTE, metadata_cache_mode = 'AUTOMATIC');"}
                result: queryResult
            - returnResult_create_gcp_tbl_products:
                assign:
                    - results.create_gcp_tbl_products: ${queryResult}
    - create_row_access_policy_usa_filter:
        steps:
            - logTable_create_row_access_policy_usa_filter:
                call: sys.log
                args:
                    text: ${"Creating row_access_policy_usa_filter..."}
            - run_create_row_access_policy_usa_filter:
                call: googleapis.bigquery.v2.jobs.query
                args:
                    projectId: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
                    body:
                        useLegacySql: false
                        useQueryCache: false
                        location: 'us-central1'
                        timeoutMs: 600000
                        query: ${"CREATE OR REPLACE ROW ACCESS POLICY usa_filter ON `" + sys.get_env("GOOGLE_CLOUD_PROJECT_ID") + ".gcp_lakehouse_ds.gcp_tbl_users` GRANT TO ('serviceAccount:user-marketing-sa-2989a9b5@steveswalker-solutions-207.iam.gserviceaccount.com') FILTER USING (Country = 'United States');"}
                result: queryResult
            - returnResult_create_row_access_policy_usa_filter:
                assign:
                    - results.create_row_access_policy_usa_filter: ${queryResult}                            
    - create_row_access_policy_product_category_filter:
        steps:
            - logTable_create_row_access_policy_product_category_filter:
                call: sys.log
                args:
                    text: ${"Creating product_category_filter..."}
            - run_create_row_access_policy_product_category_filter:
                call: googleapis.bigquery.v2.jobs.query
                args:
                    projectId: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
                    body:
                        useLegacySql: false
                        useQueryCache: false
                        location: 'us-central1'
                        timeoutMs: 600000
                        query: ${"CREATE OR REPLACE ROW ACCESS POLICY product_category_filter ON `" + sys.get_env("GOOGLE_CLOUD_PROJECT_ID") + ".gcp_lakehouse_ds.gcp_tbl_products` GRANT TO ('serviceAccount:user-analyst-sa-2989a9b5@steveswalker-solutions-207.iam.gserviceaccount.com') FILTER USING (Category = 'Swim' or Category = 'Active' or Category = 'Fashion Hoodies & Sweatshirts');"}
                result: queryResult
            - returnResult_create_row_access_policy_product_category_filter:
                assign:
                    - results.create_row_access_policy_product_category_filter: ${queryResult}
    - create_view_ecommerce:
        steps:
            - logTable_create_view_ecommerce:
                call: sys.log
                args:
                    text: ${"create_view_ecommerce..."}
            - run_create_view_ecommerce:
                call: googleapis.bigquery.v2.jobs.query
                args:
                    projectId: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
                    body:
                        useLegacySql: false
                        useQueryCache: false
                        location: 'us-central1'
                        timeoutMs: 600000
                        query: ${"call create_view_ecommerce()"}
                result: queryResult
            - returnResult_create_view_ecommerce:
                assign:
                    - results.create_view_ecommerce: ${queryResult}

    - returnResults:
        return: ${results}
